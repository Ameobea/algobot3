"use strict";
/*jslint browser: true*/ /*global $*/

$(document).ready(()=>{
  //set up button listeners
  $("#instance-spawn-button").click(()=>{
    var type = $("#instance-type").val()
    var data = $("#instance-data-box").val();

    spawnInstance(type, data);
  });

  //load data
  loadInstances();
});

var loadInstances = ()=>{
  update();
};

var update = ()=>{
  $.get("./api/instances", data=>{
    var parsed = JSON.parse(data);
    var table = "<table><tr><th>Kill</th><th>Type</th><th>Data</th></tr>";

    $.each(parsed.instances, (index, elem)=>{
      
      if(elem.type == "manager"){
        table += (`<tr><td>${getKillButton(elem.type, elem)}</td><td>Manager</td><td>Port: <b>${elem.port}</b></td></tr>`);
      }else if(elem.type == "tickParser"){
        table += (`<tr><td>${getKillButton(elem.type, elem)}</td><td>Tick Parser</td><td>Listening for pairs: <b>${elem.pairs}</b></td></tr>`);
      }
    });

    table += "</table>";

    $("#running-instances").html(table);

    $.each(parsed.backtests, (index, elem)=>{
      // TODO
    });
  }).fail(err=>{
    console.log("Unable to connect to ")
  })
}

var getKillButton = (type, data)=>{
  var include;

  if(type == "manager"){
    include = data.port;
  }else if(type == "tickParser"){
    include = data.id;
  }

  return `<input type="button" onclick="killConfirm('${type}', '${include}')" value="X">`;
};

var killConfirm = (type, data)=>{
  var res = window.confirm("Are you sure you want to kill this instance?");
  if(res){
    killInstance(type, data);
  }
};

var killInstance = (type, data)=>{
  $.get(`./api/instances/kill/${type}/${data}`, res=>{
    $("#statusbar").html(res);
    update();
  }).fail(err=>{
    $("#statusbar").html(`<p>Failed to kill instance: ${err.status}</p>`);
  })
};

var spawnInstance = (type, data)=>{
  $.get(`./api/instances/spawn/${type}/${data}`, res=>{
    $("#statusbar").html(`Instance spawned with message: ${res}`);
    setTimeout(()=>{update();},500);
  });
}
